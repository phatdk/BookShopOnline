@page "/login"
@using BookShop.Web.Blazor.Authentication;
@inject UserService userService
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager


<div class="row">
	<div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
		<div class="mb-3 text-center">
			<h3>Login</h3>
		</div>
		<div class="mb-3">
			<label>UserName</label>
			<input @bind="model.Email" class="form-control" placeholder="User name" />
		</div>
		<div class="mb-3">
			<label>Password</label>
			<input @bind="model.Password" type="password" class="form-control" placeholder="Password" />
		</div>
		<div class="mb-3 d-sm-grid gap-2">
			<button @onclick="Authenticate" class="btn btn-primary">Login</button>
		</div>
	</div>
</div>
@code {
	private class Model
	{
		public string Email { get; set; }
		public string Password { get; set; }
	}
	private Model model = new Model();
	public async Task Authenticate()
	{
		var user = userService.GetAccount(model.Email);
		if(user == null || user.Password != model.Password)
		{
			await js.InvokeVoidAsync("alert", $"Tên đăng nhập hoặc mật khẩu sai");
			return;
		}
		var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
		await customAuthStateProvider.UpdateAuthenticationState(new AccountLogin
			{
				Name = user.Name,
				Role = user.Role,
			});
			navManager.NavigateTo("/", true);
	}
}
